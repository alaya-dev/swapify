security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: argon2id
            time_cost: 10
            memory_cost: 1024
            
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            access_denied_url: /error403
            access_denied_url: /error500
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 20  
                path: / 
                always_remember_me: true
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator  
            logout:
                path: app_logout
                target: /
                
            
                    
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used

    access_control:
        - { path: ^/dashboard/client, roles: ROLE_CLIENT }
        #   - { path: ^/product/new, roles: ROLE_CLIENT }
        - { path: ^/blog/new, roles: ROLE_CLIENT }
        - { path: ^/blog/\d+/edit, roles: ROLE_CLIENT }
        - { path: ^/dashboard, roles: [ROLE_ADMIN, ROLE_SUPER_ADMIN] }
        - { path: ^/admin/liste, roles: ROLE_SUPER_ADMIN }
        - { path: ^/admin/add_admin, roles: ROLE_SUPER_ADMIN }
        - { path: ^/client/liste, roles: [ROLE_ADMIN, ROLE_SUPER_ADMIN] }
        - { path: ^/client/supprimer, roles: [ROLE_ADMIN, ROLE_SUPER_ADMIN] }
        - { path: ^/blog/admin/pending-blogs, roles: [ROLE_ADMIN, ROLE_SUPER_ADMIN] }

    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_SUPER_ADMIN
        ROLE_ADMIN: ROLE_ADMIN
        ROLE_CLIENT: ROLE_CLIENT    

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: argon2id
                time_cost: 10
                memory_cost: 1024
            
