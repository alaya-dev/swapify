# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration


parameters:
    uploads_directory: '%kernel.project_dir%/public/uploads/images'
    photo_dir_products: '%kernel.project_dir%/public/uploads/products'
    pusher_key: '%env(PUSHER_KEY)%'
    pusher_secret: '%env(PUSHER_SECRET)%'
    pusher_app_id: '%env(PUSHER_APP_ID)%'
    pusher_cluster: '%env(PUSHER_CLUSTER)%'
    projectDir: '%kernel.project_dir%/public/uploads/certifs'
    videosdk_api_key: '%env(VIDEOSDK_API_KEY)%'
    VIDEOSDK_SECRET_KEY: '%env(VIDEOSDK_SECRET_KEY)%'
    images_directory: '%kernel.project_dir%/public/uploads/images'
    swapifyAdminEmail: 'swapifyMailer199@gmail.com'
    bad_words:
        - badword1
        - badword2
        - badword3

services:
    App\Service\CertificateGeneratorService:
        arguments:
             $projectDir: '%kernel.project_dir%/public/uploads/certifs'
    
            
    App\Service\ParticipationCalculatorService:
        arguments: 
            $attendanceRepository: '@App\Repository\AttendanceRepository'
            $sessionRepository: '@App\Repository\SessionRepository'
            $participantEventRepository: '@App\Repository\ParticipantEventRepository'
   
   
    # RecommandationAnnonce service
    App\Service\RecommandationService:
        arguments:
            $client: '@http_client'
    App\Service\ETAService:
        autowire: true
        autoconfigure: true

    #mailer mailJet service 
    App\Service\mailerMailJetService:
        autowire: true
        autoconfigure: true
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Controller\SecurityController:
         

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\LoginListener:
        class: App\EventListener\LoginListener
        tags:
            - { name: kernel.event_listener, event: security.interactive_login }
    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
    
    App\Service\BadWordFilter:
        arguments:
            $badWords: '%bad_words%'  # Pass the bad words list from parameters