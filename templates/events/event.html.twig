{% extends 'base.html.twig' %} {% block body %}
<div class="container mx-auto px-4 py-8">
  <div class="flex flex-col lg:flex-row gap-8">
    <!-- Left section - Event details -->
    <div class="w-full lg:w-8/12">
      <div class="bg-white rounded-lg overflow-hidden shadow-md">
        <div class="relative h-80">
          <img
            src="{{ asset('uploads/images/' ~ event.image) }}"
            alt="{{ event.title }}"
            class="w-full h-full object-cover"
          />
          <div class="absolute top-4 left-4">
            <span
              class="bg-blue-600 text-white px-4 py-2 rounded-md font-semibold"
            >
              {{ event.status }}
            </span>
          </div>
        </div>

        <div class="p-6">
          <h1 class="text-3xl font-bold text-gray-800 mb-4">
            {{ event.title }}
          </h1>

          <div class="flex flex-wrap gap-3 mb-6">
            <span
              class="px-3 py-1 bg-{{
                event.status == 'Acceptée'
                  ? 'green'
                  : event.status == 'Rejetée'
                  ? 'red'
                  : 'yellow'
              }}-100 text-{{
                event.status == 'Acceptée'
                  ? 'green'
                  : event.status == 'Rejetée'
                  ? 'red'
                  : 'yellow'
              }}-800 rounded-full text-sm font-medium"
            >
              {{ event.status }}
            </span>
            <span
              class="px-3 py-1 bg-purple-100 text-purple-800 rounded-full text-sm font-medium"
            >
              encore {{ event.maxParticipant }} place disponible
            </span>
          </div>

          <div class="flex items-center gap-2 text-gray-600 mb-3">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
              />
            </svg>
            <span
              >{{ event.dateDebut|date('d M, Y') }} -
              {{ event.dateFin|date('d M, Y') }}</span
            >
          </div>

          <div class="flex items-center gap-2 text-gray-600 mb-6">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
              />
            </svg>
            <span
              >Organisé par: {{ event.orgniser.nom }}
              {{ event.orgniser.prenom }}</span
            >
          </div>

          <div class="border-t border-gray-200 pt-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-4">
              Description
            </h2>
            <p class="text-gray-600">
              {{ event.description }}
            </p>
          </div>
          <div class="border-t border-gray-200 pt-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-4">Actions</h2>
            <a
              href="{{ path('app_event_index') }}"
              class="text-teal-600 hover:text-teal-800"
              >retour</a
            >
          </div>
        </div>
      </div>
    </div>

    <!-- Right section - Sessions & Booking -->
    <div class="w-full lg:w-4/12">
      <div class="bg-white rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">
          Sessions Information
        </h2>
        <div class="space-y-4">
          {% for session in event.sessions %}
          <div
            class="border-l-4 {{
              cycle(
                [
                  'border-blue-500',
                  'border-green-500',
                  'border-purple-500',
                  'border-yellow-500'
                ],
                loop.index0
              )
            }} pl-4 py-2"
          >
            <p class="font-semibold text-gray-800">{{ session.objective }}</p>
            <p class="text-sm text-gray-500">
              {{ session.startHour|date('d M, Y - H:i') }} to
              {{ session.endHour|date('H:i') }}
            </p>
            <p class="px-4 py-1 text-white font-light tracking-wider bg-gray-700 rounded mt-3 flex justify-center items-center w-full">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 mr-2"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"
                /></svg>{{ session.typeSession }}
            </p>
            <div class="mt-2 flex gap-2"></div>
          </div>
          {% endfor %}
        </div>
      </div>
    </div>
   
  </div>
</div>

<script>
    

        document.querySelectorAll('.msg').forEach(message => {
            setTimeout(() => {
                message.remove();
            }, 3000);
        });
        
        // Improved modal handling for delete actions
        document.querySelectorAll("[data-modal-toggle]").forEach((button) => {
            button.addEventListener("click", function (e) {
                e.preventDefault();
                const modalId = this.getAttribute("data-modal-toggle");
                const modal = document.getElementById(modalId);
                modal.classList.remove("hidden");
            });
        });
        
        document.querySelectorAll("[data-modal-close]").forEach((button) => {
            button.addEventListener("click", function (e) {
                e.preventDefault();
                const modalId = this.getAttribute("data-modal-close");
                const modal = document.getElementById(modalId);
                modal.classList.add("hidden");
            });
        });
        
        // Event delegation for modal background clicks
        document.addEventListener("click", function(e) {
            if (e.target.matches('[id^="deleteModal-"]')) {
                e.target.classList.add("hidden");
            }
        });
        
        document.querySelectorAll('form[method="POST"]').forEach((form) => {
            form.addEventListener("submit", function(e) {
                const modalElement = this.closest('[id^="deleteModal-"]');
                if (modalElement) {
                    modalElement.classList.add("hidden");
                }
            });
        });
        </script>

{% endblock %}