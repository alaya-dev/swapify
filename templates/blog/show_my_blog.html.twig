{% extends 'dashBord_user.html.twig' %}

{% block title %}Blog Details{% endblock %}

{% block stylesheets %}
    {{ parent() }} {# Inherit styles from dashBord_user.html.twig #}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        /* Custom Styles */
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .blog-post {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            padding: 20px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .blog-post:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        }

        .blog-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .blog-header img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 15px;
            object-fit: cover;
        }

        .blog-header .user-info {
            flex: 1;
        }

        .blog-header .user-info h5 {
            margin: 0;
            font-size: 1.1rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .blog-header .user-info small {
            color: #6c757d;
            font-size: 0.9rem;
        }

        .blog-content {
            margin-bottom: 15px;
        }

        .blog-content img {
            width: 100%;
            border-radius: 10px;
            margin-bottom: 15px;
        }

        .blog-content p {
            font-size: 1rem;
            color: #555;
            line-height: 1.6;
            margin: 0;
        }

        .blog-status {
            margin-bottom: 15px;
        }

        .blog-status .badge {
            font-size: 0.9rem;
            padding: 6px 12px;
            border-radius: 20px;
            background: linear-gradient(135deg, #6c757d, #495057);
            color: white;
        }

        .blog-actions {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }

        .blog-actions .btn {
            border-radius: 20px;
            padding: 8px 16px;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .blog-actions .btn-primary {
            background: linear-gradient(135deg, #007bff, #0056b3);
        }

        .blog-actions .btn-success {
            background: linear-gradient(135deg, #28a745, #218838);
        }

        .blog-actions .btn-warning {
            background: linear-gradient(135deg, #ffc107, #e0a800);
        }

        .blog-actions .btn-danger {
            background: linear-gradient(135deg, #dc3545, #c82333);
        }

        .rating-section {
            margin-bottom: 15px;
        }

        .rating-section h6 {
            font-size: 1rem;
            font-weight: 600;
            color: #6c757d;
            margin-bottom: 10px;
        }

        .rating-section .rating {
            display: flex;
            align-items: center;
        }

        .rating-section .rating i {
            margin-right: 5px;
            color: #ffc107;
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 1.2rem;
        }

        .rating-section .rating i:hover,
        .rating-section .rating i.active {
            color: #ffc107;
            transform: scale(1.2);
        }

        .comment-section {
            margin-top: 15px;
        }

        .comment-section h6 {
            font-size: 1rem;
            font-weight: 600;
            color: #6c757d;
            margin-bottom: 10px;
        }

        .comment-section .list-group-item {
            border: none;
            padding: 10px;
            background: rgba(248, 249, 250, 0.9);
            margin-bottom: 10px;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .comment-section .list-group-item:hover {
            transform: translateX(5px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .comment-section .list-group-item p {
            margin: 0;
            font-size: 0.9rem;
            color: #555;
        }

        .comment-section .list-group-item small {
            color: #6c757d;
            font-size: 0.8rem;
        }

        .no-comments {
            text-align: center;
            color: #6c757d;
            font-size: 1rem;
            margin-top: 20px;
        }

        /* Star Rating Checkbox Styles */
        .star-rating {
            display: flex;
            flex-direction: row-reverse; /* Reverse order for CSS sibling selector */
            justify-content: flex-end;
        }

        .star-rating input[type="checkbox"] {
            display: none; /* Hide the actual checkboxes */
        }

        .star-rating label {
            cursor: pointer;
            font-size: 1.5rem;
            color: #ddd; /* Default star color (unselected) */
            transition: color 0.2s ease;
        }

        .star-rating input[type="checkbox"]:checked ~ label,
        .star-rating input[type="checkbox"]:hover ~ label {
            color: #ffc107; /* Highlight stars up to the selected one */
        }

        .star-rating label:hover,
        .star-rating label:hover ~ label {
            color: #ffc107; /* Highlight stars on hover */
        }
    </style>
{% endblock %}

{% block content %}
    <div class="container mt-5">
        <h1 class="text-center mb-4">Blog Details</h1>

        <div class="blog-post">
            <div class="blog-header">
                <div class="user-info">
                    <h5>{{ blog.user.prenom }} {{ blog.user.nom }}</h5>
                    <small>{{ blog.createdAt|date('Y-m-d H:i:s') }}</small>
                </div>
            </div>
            <div class="blog-content">
                {% if blog.image %}
                    <img src="{{ asset('uploads/images/' ~ blog.image) }}" alt="{{ blog.Titre }}" class="img-fluid">
                {% else %}
                <img src="{{ asset('uploads/images/' ~ blog.image) }}" alt="{{ blog.Titre }}">

                {% endif %}
                <p>{{ blog.Contenu|raw }}</p>
            </div>
            <div class="blog-status">
                <span class="badge btn-{{ blog.statut.value == 'enAttente' ? 'warning' : 'success' }}">
                    {{ blog.statut.value }}
                </span>
            </div>

            {# Edit and Delete Buttons (only visible to the blog owner) #}
            {% if blog.user == app.user %}
                <div class="blog-actions">
                    <a href="{{ path('app_blog_edit', {'id': blog.id}) }}" class="btn btn-warning">
                        <i class="fas fa-edit"></i> Modifier
                    </a>
                    <form method="POST" action="{{ path('app_blog_delete', {'id': blog.id}) }}" class="d-inline">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ blog.id) }}">
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this blog?');">
                            <i class="fas fa-trash"></i> Supprimer
                        </button>
                    </form>
                </div>
            {% endif %}

            {% if 'ROLE_CLIENT' in app.user.roles %}
                <a href="{{ path('app_blog_index') }}" class="btn btn-primary">
                    <i class="fas fa-arrow-left"></i> Retourner aux Blogs
                </a>
            {% else %}
                <a href="{{ path('app_blog_all') }}" class="btn btn-primary">
                    <i class="fas fa-arrow-left"></i> Retourner aux Blogs
                </a>
            {% endif %}

            {# Ratings Section #}
            <div class="rating-section">
                <h6>Ratings ({{ blog.rateCount }})</h6>
                {% if blog.getRate() > 0.0 %}
                    <div class="rating">
                        {% set fullStars = blog.getRate()|round(0, 'floor') %}
                        {% set fractionalPart = blog.getRate() % 1 %}
                        {% set halfStar = fractionalPart >= 0.25 and fractionalPart < 0.75 ? 1 : 0 %}
                        {% set emptyStars = 5 - fullStars - halfStar %}

                        {% for i in 0..fullStars - 1 %}
                            <i class="fas fa-star text-warning"></i>
                        {% endfor %}

                        {% if halfStar == 1 and fullStars < 5 %}
                            <i class="fas fa-star-half-alt text-warning"></i>
                        {% endif %}

                        {% if fullStars < 5 %}
                            {% for i in 0..emptyStars - 1 %}
                                <i class="far fa-star text-warning"></i>
                            {% endfor %}
                        {% endif %}
                        <span>{{ blog.getRate()|number_format(1) }} â˜…</span>
                    </div>
                {% else %}
                    <p class="text-muted">No ratings yet.</p>
                {% endif %}
            </div>


            {# Comments Section #}
            <div class="comment-section">
                <h6>Commentaires ({{ blog.listeCommentaires|length }})</h6>
                {% if blog.listeCommentaires is empty %}
                    <p class="no-comments">No comments yet.</p>
                {% else %}
                    <ul class="list-group">
                        {% for comment in blog.listeCommentaires %}
                            <li class="list-group-item" id="comment-{{ comment.id }}">
                                <p><strong>{{ comment.user.prenom }} {{ comment.user.nom }}</strong> <small class="text-muted">({{ comment.createdAt|date('Y-m-d H:i:s') }})</small></p>
                                <p id="comment-content-{{ comment.id }}">{{ comment.contenuCmt }}</p>
                                {% if comment.user == app.user or is_granted('ROLE_ADMIN') %}
                                    <div class="mt-2">
                                        {% if comment.user == app.user %}
                                            <button class="btn btn-sm btn-warning edit-comment-btn" data-comment-id="{{ comment.id }}">
                                                <i class="fas fa-edit"></i> Modifier
                                            </button>
                                        {% endif %}
                                        <form method="POST" action="{{ path('app_commentaire_delete', {'id': comment.id}) }}" class="d-inline">
                                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ comment.id) }}">
                                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this comment?');">
                                                <i class="fas fa-trash"></i> Supprimer
                                            </button>
                                        </form>
                                    </div>
                                {% endif %}
                                {# Edit Form (hidden by default) #}
                                <form id="edit-comment-form-{{ comment.id }}" class="edit-comment-form" style="display: none;" data-comment-id="{{ comment.id }}">
                                    <textarea class="form-control mb-2" name="contenu">{{ comment.contenuCmt }}</textarea>
                                    <button type="submit" class="btn btn-sm btn-success">Enregistrer</button>
                                    <button type="button" class="btn btn-sm btn-secondary cancel-edit-btn">Annuler</button>
                                </form>
                            </li>
                        {% endfor %}
                    </ul>
                {% endif %}
            </div>
{% if 'ROLE_CLIENT' in app.user.roles %}

            {# Comment Form #}
            <form method="POST" action="{{ path('app_commentaire_new', {'blogId': blog.id}) }}" class="mt-3">
                <div class="mb-2">
                    <textarea name="contenu" class="form-control" placeholder="Write a comment..." required></textarea>
                </div>
                <button type="submit" class="btn btn-secondary">Post Comment</button>
            </form>
            {% endif %}

        </div>
    </div>

    <script>
         // JavaScript to handle the edit comment functionality
    document.querySelectorAll('.edit-comment-btn').forEach(button => {
        button.addEventListener('click', function() {
            const commentId = this.getAttribute('data-comment-id');
            const commentContent = document.getElementById(`comment-content-${commentId}`);
            const editForm = document.getElementById(`edit-comment-form-${commentId}`);

            // Hide the comment content and show the edit form
            commentContent.style.display = 'none';
            editForm.style.display = 'block';
        });
    });

    document.querySelectorAll('.cancel-edit-btn').forEach(button => {
        button.addEventListener('click', function() {
            const form = this.closest('.edit-comment-form');
            const commentId = form.getAttribute('data-comment-id');
            const commentContent = document.getElementById(`comment-content-${commentId}`);

            // Hide the edit form and show the comment content
            form.style.display = 'none';
            commentContent.style.display = 'block';
        });
    });

    document.querySelectorAll('.edit-comment-form').forEach(form => {
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            const commentId = this.getAttribute('data-comment-id');
            const formData = new FormData(this);

            fetch(`/commentaire/${commentId}/edit`, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                },
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const commentContent = document.getElementById(`comment-content-${commentId}`);
                    commentContent.textContent = data.newContent;
                    const editForm = document.getElementById(`edit-comment-form-${commentId}`);
                    editForm.style.display = 'none';
                    commentContent.style.display = 'block';
                } else {
                    alert('Failed to update the comment.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    });
    </script>
{% endblock %}