{% extends 'dashBord_user.html.twig' %}
{% block sidebar %}{% endblock %}
{% block header %}{% endblock %}

{% block content %}
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
	<script src="https://js.stripe.com/v2/"></script>

	<div class="w-full overflow-hidden border-t flex flex-col">
		<main class="w-full flex-grow p-6 flex justify-center">
			<div class="max-w-lg w-full bg-white p-6 rounded shadow-md">
				<p class="text-xl pb-6 flex items-center">
					<i class="fas fa-credit-card mr-3"></i>
					Effectuer Votre Paiement
				</p>
				<div
					class="flex flex-col space-y-6">
					<!-- Form -->
					<div class="w-full">
						<div class="leading-loose">
							<p class="text-lg text-gray-800 font-medium pb-4">Détails de paiement</p>
							<form role="form" action="{{ path('payment_process', {'id': livraison.id}) }}" method="post" class="require-validation" data-stripe-publishable-key="{{ stripe_public_key }}" id="payment-form">

								<div class="">
									<label class="block text-sm text-gray-600" for="cus_email">Adresse Email</label>
									<input class="w-full px-5 py-1 text-gray-700 bg-gray-200 rounded" id="cus_email" name="email" type="email" required placeholder="Votre adresse email" value="{{ app.user.email }}" aria-label="Email">
									<small class="text-danger error-message" style="display: none;">Veuillez entrer une adresse email valide.</small>
								</div>

								<div class="mt-2">
									<label class="block text-sm text-gray-600" for="card_number">Numéro de carte</label>
									<input autocomplete='off' class="w-full px-2 py-2 text-gray-700 bg-gray-200 rounded card-number" id="card_number" name="card_number" type="text"  placeholder="Numéro de carte" aria-label="Numéro de carte">

									<small class="text-danger error-message" style="display: none;">Veuillez entrer un numéro de carte valide.</small>

								</div>

								<div class="mt-2 flex space-x-2">
									<div class="w-1/2">
										<label class="block text-sm text-gray-600" for="exp_month">Mois d'expiration</label>
										<select class="w-full px-2 py-2 text-gray-700 bg-gray-200 rounded card-expiry-month" id="exp_month" name="exp_month" >
											<option value="">Mois</option>
											{% for month in 1..12 %}
												<option value="{{ month }}">{{ month }}</option>
											{% endfor %}
										</select>
										<small class="text-danger error-message" style="display: none;">Veuillez sélectionner le mois.</small>
									</div>

									<div class="w-1/2">
										<label class="block text-sm text-gray-600" for="exp_year">Année d'expiration</label>
										<select class="w-full px-2 py-2 text-gray-700 bg-gray-200 rounded card-expiry-year" id="exp_year" name="exp_year" >
											<option value="">Année</option>
											{% for year in range("now"|date("Y"), "now"|date("Y") + 10) %}
												<option value="{{ year }}">{{ year }}</option>
											{% endfor %}
										</select>
										<small class="text-danger error-message" style="display: none;">Veuillez sélectionner l'année.</small>
									</div>
								</div>

								<div class="mt-2">
									<label class="block text-sm text-gray-600" for="cvc">CVC</label>
									<input autocomplete='off' class="w-full px-2 py-2 text-gray-700 bg-gray-200 rounded card-cvc" id="cvc" name="cvc" type="text"  placeholder="ex. 311" aria-label="CVC">
									<small class="text-danger error-message" style="display: none;">Veuillez entrer un CVC valide.</small>
								</div>

								<div class="mt-2">
									<label class="block text-sm text-gray-600" for="montant">Montant (TND)</label>
									<input class="w-full px-2 py-2 text-gray-700 bg-gray-200 rounded" id="montant" name="montant" type="text"  value="10" readonly>
								</div>

								<div class="mt-6">
									{% if (livraison.paymentExp == 'non payé' and app.user.id == livraison.idExpediteur.id) or 
                                (livraison.paymentDist == 'non payé' and app.user.id == livraison.idDistinataire.id) %}
										<button class="px-4 py-1 text-white font-light tracking-wider bg-gray-900 rounded w-full" type="submit">Payer</button>
										<a href="{{ path('livraison_list') }}" class="mt-2 px-4 py-1 text-white font-light tracking-wider bg-gray-500 rounded w-full text-center block">
											Payer plus tard
										</a>
									{% else %}
										<a href="{{ path('livraison_list') }}" class="px-4 py-1 text-white font-light tracking-wider bg-green-600 rounded w-full text-center">Voir mes livraisons</a>
									{% endif %}
								</div>

							</form>

						</div>
					</div>
				</div>
			</div>
		</main>
	</div>


	<script>
		$(function () {
var $form = $(".require-validation");

$form.bind('submit', function (e) {
var $form = $(".require-validation"),
inputSelector = [
'input[type=email]',
'input[type=password]',
'input[type=text]',
'input[type=file]',
'textarea'
].join(', '),
$inputs = $form.find('.required').find(inputSelector),
$errorMessage = $form.find('div.error'),
valid = true;
$errorMessage.addClass('hide');
$('.has-error').removeClass('has-error');

$inputs.each(function (i, el) {
var $input = $(el);
if ($input.val() === '') {
$input.parent().addClass('has-error');
$errorMessage.removeClass('hide');
e.preventDefault();
}
});

if (! $form.data('cc-on-file')) {
e.preventDefault();
Stripe.setPublishableKey($form.data('stripe-publishable-key'));
Stripe.createToken({
number: $('.card-number').val(),
cvc: $('.card-cvc').val(),
exp_month: $('.card-expiry-month').val(),
exp_year: $('.card-expiry-year').val()
}, stripeResponseHandler);
}
});

function stripeResponseHandler(status, response) {
if (response.error) {
$('.error').removeClass('hide').find('.alert').text(response.error.message);
} else {
var token = response['id'];
$form.append("<input type='hidden' name='stripeToken' value='" + token + "'/>");
$form.get(0).submit();
}
}
});

// Ajout de la détection du type de carte
const cardInput = document.querySelector(".card-number");
const cardLogo = document.getElementById("card-logo");

const cardLogos = {
visa: "https://upload.wikimedia.org/wikipedia/commons/4/41/Visa_Logo.png",
mastercard: "https://upload.wikimedia.org/wikipedia/commons/2/2a/Mastercard-logo.svg",
amex: "https://upload.wikimedia.org/wikipedia/commons/3/30/American_Express_logo_%282018%29.svg"
};

function detectCardType(number) {
const patterns = {
visa: /^4/,
mastercard: /^5[1-5]/,
amex: /^3[47]/
};

for (const [card, pattern] of Object.entries(patterns)) {
if (pattern.test(number)) {
return card;
}
}
return null;
}

cardInput.addEventListener("input", (e) => {
let number = e.target.value.replace(/\D/g, ""); // Supprime les non-chiffres

let formattedNumber = number.replace(/(\d{4})/g, "$1 ").trim(); // Format XXXX XXXX XXXX XXXX
e.target.value = formattedNumber;

const cardType = detectCardType(number);
if (cardType) {
cardLogo.src = cardLogos[cardType];
cardLogo.style.display = "block";
} else {
cardLogo.style.display = "none";
}
});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
const form = document.getElementById("payment-form");

form.addEventListener("submit", function (e) {
e.preventDefault();
// Empêcher l'envoi par défaut

// Vérifier si les champs sont remplis
let email = document.querySelector("input[name='email']").value.trim();
let cardNumber = document.querySelector(".card-number").value.trim();
let expMonth = document.querySelector(".card-expiry-month").value;
let expYear = document.querySelector(".card-expiry-year").value;
let cvc = document.querySelector(".card-cvc").value.trim();
let montant = document.querySelector("input[name='montant']").value.trim();

if (! email || ! cardNumber || ! expMonth || ! expYear || ! cvc || ! montant) {
alert("Veuillez remplir tous les champs.");
return;
}

// Simulation du traitement du paiement
setTimeout(function () {
alert("Paiement effectué avec succès !");
location.reload(); // Recharge la page après OK
}, 1000);
});
});
	</script>
{% endblock %}
