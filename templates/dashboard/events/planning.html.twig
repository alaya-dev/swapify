{% extends 'dashBord_user.html.twig' %}

{% block content %}
<style>
    .live-icon {
        display: inline-block;
        width: 10px;
        height: 10px;
        background-color: red;
        border-radius: 50%;
        animation: pulse 1.5s infinite;
        margin-right: 5px;
        vertical-align: middle;
    }

    @keyframes pulse {
        0% {
            opacity: 1;
            transform: scale(1);
        }
        50% {
            opacity: 0.6;
            transform: scale(1.3);
        }
        100% {
            opacity: 1;
            transform: scale(1);
        }
    }

    .text-muted {
        color: #6b7280;
    }
</style>

<div class="overflow-x-auto">
    <table class="min-w-full border-collapse border border-gray-300">
        <thead class="bg-gray-100">
            <tr class="border border-gray-300">
                <th class="px-4 py-2 text-left text-gray-700">Objective</th>
                <th class="px-4 py-2 text-left text-gray-700">Heure de Début</th>
                <th class="px-4 py-2 text-left text-gray-700">Heure de Fin</th>
                <th class="px-4 py-2 text-left text-gray-700">Type de session</th>
                <th class="px-4 py-2 text-left text-gray-700">Actions</th>
            </tr>
        </thead>
        <tbody class="bg-white">
            {% for session in sessions %}
                <tr class="border border-gray-300">
                    <td class="px-4 py-2 text-gray-600">{{ session.objective }}</td>
                    <td class="px-4 py-2 text-gray-600">{{ session.startHour|date('d M, Y H:i') }}</td>
                    <td class="px-4 py-2 text-gray-600">{{ session.endHour|date('d M, Y H:i') }}</td>
                    <td class="px-4 py-2 text-gray-600">{{ session.typeSession }}</td>
                    <td class="px-4 py-2 space-x-2" 
                        data-session-id="{{ session.id }}" 
                        data-start-hour="{{ session.startHour|date('Y-m-d\\TH:i:s') }}" 
                        data-end-hour="{{ session.endHour|date('Y-m-d\\TH:i:s') }}"
                        data-type-session="{{ session.typeSession }}"
                        data-join-url="{{ path('join_online_sessionn', { id: session.id }) }}">
                        <span class="session-status"></span>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        function updateSessionStatuses() {
            const now = new Date();

            document.querySelectorAll("td[data-session-id]").forEach((td) => {
                const startHour = new Date(td.getAttribute("data-start-hour"));
                const endHour = new Date(td.getAttribute("data-end-hour"));
                const typeSession = td.getAttribute("data-type-session");
                const joinUrl = td.getAttribute("data-join-url");
                const statusSpan = td.querySelector(".session-status");
                if (typeSession === "En ligne") {
                    if (startHour <= now && endHour >= now) {
                        // Session is ongoing
                        statusSpan.innerHTML = `
                            <span class="live-icon"></span>
                            <a href="${joinUrl}" class="text-red-600 hover:text-red-800">Join meeting</a>
                        `;
                    } else if (startHour > now) {
                        // Session has not started yet
                        statusSpan.innerHTML = `<span class="text-muted">Session pas encore commencée</span>`;
                    } else {
                        // Session has ended
                        statusSpan.innerHTML = `<span class="text-muted text-red-500">Session déjà écoulée</span>`;
                    }
                } else {
                    // Session is "Présentiel"
                    statusSpan.innerHTML = `<span class="text-teal-600 hover:text-teal-800">Session présentiel</span>`;
                }
            });
        }

        // Update statuses immediately on page load
        updateSessionStatuses();

        // Update statuses every 30 seconds
        setInterval(updateSessionStatuses, 30000);
    });
</script>
{% endblock %}